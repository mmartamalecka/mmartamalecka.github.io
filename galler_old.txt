  {% when 'image-gallery' %}
  {% assign gallery_id = 'gallery-' | append: forloop.index %}
  <div class="image-gallery" id="{{ gallery_id }}" 
  data-images='{{ column.images | jsonify }}'
  data-aspect-ratio="{{ column.aspect_ratio | default: '1:1' }}">
    <div class="gallery-container">
      <!-- <img class="current" src="{{ column.images[0] | prepend: site.image_serve_path }}" alt="Gallery image"> -->
      <img class="next" src="{{ column.images[0] | prepend: site.image_serve_path }}" alt="Gallery image">
    </div>
    <button class="gallery-nav prev">&#10094;</button>
    <button class="gallery-nav next">&#10095;</button>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      function initializeGallery(galleryId) {
        const gallery = document.getElementById(galleryId);
        const container = gallery.querySelector('.gallery-container');
        const prevBtn = gallery.querySelector('.gallery-nav.prev');
        const nextBtn = gallery.querySelector('.gallery-nav.next');
        const images = JSON.parse(gallery.dataset.images);
        let currentIndex = 0;
        let isTransitioning = false;
  
        function createImage(src, className) {
          const img = new Image();
          img.src = '{{ site.image_serve_path }}' + src;
          img.className = className;
          img.alt = "Gallery image";
          return img;
        }
  
        let currentImg = createImage(images[0], 'current');
        let nextImg = createImage(images[1], 'next');
        container.appendChild(currentImg);
        container.appendChild(nextImg);
  
        function changeImage(direction) {
          if (isTransitioning) return;
          isTransitioning = true;
  
          const nextIndex = direction === 'next' 
            ? (currentIndex + 1) % images.length 
            : (currentIndex - 1 + images.length) % images.length;
  
          nextImg.src = '{{ site.image_serve_path }}' + images[nextIndex];
          
          nextImg.style.transition = 'none';
          nextImg.style.transform = direction === 'next' ? 'translateX(100%)' : 'translateX(-100%)';
          
          setTimeout(() => {
            nextImg.style.transition = 'transform 0.5s ease-in-out';
            nextImg.style.transform = 'translateX(0)';
            currentImg.style.transform = direction === 'next' ? 'translateX(-100%)' : 'translateX(100%)';
          }, 20);
  
          setTimeout(() => {
            container.removeChild(currentImg);
            currentImg = nextImg;
            currentImg.className = 'current';
            
            nextImg = createImage(images[(nextIndex + 1) % images.length], 'next');
            nextImg.style.transform = direction === 'next' ? 'translateX(100%)' : 'translateX(-100%)';
            container.appendChild(nextImg);
  
            currentIndex = nextIndex;
            isTransitioning = false;
          }, 520);
        }
  
        nextBtn.addEventListener('click', () => changeImage('next'));
        prevBtn.addEventListener('click', () => changeImage('prev'));
      }
  
      initializeGallery('{{ gallery_id }}');
    });
  </script>